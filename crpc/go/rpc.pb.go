// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package crpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Asset is the list of a trading assets which are available in the exchange
// platform.
type Asset int32

const (
	Asset_BTC  Asset = 0
	Asset_BCH  Asset = 1
	Asset_ETH  Asset = 2
	Asset_LTC  Asset = 3
	Asset_DASH Asset = 4
)

var Asset_name = map[int32]string{
	0: "BTC",
	1: "BCH",
	2: "ETH",
	3: "LTC",
	4: "DASH",
}
var Asset_value = map[string]int32{
	"BTC":  0,
	"BCH":  1,
	"ETH":  2,
	"LTC":  3,
	"DASH": 4,
}

func (x Asset) String() string {
	return proto.EnumName(Asset_name, int32(x))
}
func (Asset) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{0}
}

// Market is the list of trading markets which are available on the
// exchange platform.
type Market int32

const (
	Market_BTCETH  Market = 0
	Market_BTCBTH  Market = 1
	Market_BTCLTC  Market = 2
	Market_BTCDASH Market = 3
	Market_ETHLTC  Market = 4
)

var Market_name = map[int32]string{
	0: "BTCETH",
	1: "BTCBTH",
	2: "BTCLTC",
	3: "BTCDASH",
	4: "ETHLTC",
}
var Market_value = map[string]int32{
	"BTCETH":  0,
	"BTCBTH":  1,
	"BTCLTC":  2,
	"BTCDASH": 3,
	"ETHLTC":  4,
}

func (x Market) String() string {
	return proto.EnumName(Market_name, int32(x))
}
func (Market) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{1}
}

type Net int32

const (
	Net_Simnet  Net = 0
	Net_Testnet Net = 1
	Net_Mainnet Net = 2
)

var Net_name = map[int32]string{
	0: "Simnet",
	1: "Testnet",
	2: "Mainnet",
}
var Net_value = map[string]int32{
	"Simnet":  0,
	"Testnet": 1,
	"Mainnet": 2,
}

func (x Net) String() string {
	return proto.EnumName(Net_name, int32(x))
}
func (Net) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{2}
}

type PaymentReceivedRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentReceivedRequest) Reset()         { *m = PaymentReceivedRequest{} }
func (m *PaymentReceivedRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentReceivedRequest) ProtoMessage()    {}
func (*PaymentReceivedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{0}
}
func (m *PaymentReceivedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentReceivedRequest.Unmarshal(m, b)
}
func (m *PaymentReceivedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentReceivedRequest.Marshal(b, m, deterministic)
}
func (dst *PaymentReceivedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentReceivedRequest.Merge(dst, src)
}
func (m *PaymentReceivedRequest) XXX_Size() int {
	return xxx_messageInfo_PaymentReceivedRequest.Size(m)
}
func (m *PaymentReceivedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentReceivedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentReceivedRequest proto.InternalMessageInfo

func (m *PaymentReceivedRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PaymentReceivedResponse struct {
	Received             bool     `protobuf:"varint,1,opt,name=received" json:"received,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentReceivedResponse) Reset()         { *m = PaymentReceivedResponse{} }
func (m *PaymentReceivedResponse) String() string { return proto.CompactTextString(m) }
func (*PaymentReceivedResponse) ProtoMessage()    {}
func (*PaymentReceivedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{1}
}
func (m *PaymentReceivedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentReceivedResponse.Unmarshal(m, b)
}
func (m *PaymentReceivedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentReceivedResponse.Marshal(b, m, deterministic)
}
func (dst *PaymentReceivedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentReceivedResponse.Merge(dst, src)
}
func (m *PaymentReceivedResponse) XXX_Size() int {
	return xxx_messageInfo_PaymentReceivedResponse.Size(m)
}
func (m *PaymentReceivedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentReceivedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentReceivedResponse proto.InternalMessageInfo

func (m *PaymentReceivedResponse) GetReceived() bool {
	if m != nil {
		return m.Received
	}
	return false
}

type EstimateRequest struct {
	Asset                string   `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EstimateRequest) Reset()         { *m = EstimateRequest{} }
func (m *EstimateRequest) String() string { return proto.CompactTextString(m) }
func (*EstimateRequest) ProtoMessage()    {}
func (*EstimateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{2}
}
func (m *EstimateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EstimateRequest.Unmarshal(m, b)
}
func (m *EstimateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EstimateRequest.Marshal(b, m, deterministic)
}
func (dst *EstimateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstimateRequest.Merge(dst, src)
}
func (m *EstimateRequest) XXX_Size() int {
	return xxx_messageInfo_EstimateRequest.Size(m)
}
func (m *EstimateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EstimateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EstimateRequest proto.InternalMessageInfo

func (m *EstimateRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *EstimateRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type EstimationResponse struct {
	Usd                  string   `protobuf:"bytes,1,opt,name=usd" json:"usd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EstimationResponse) Reset()         { *m = EstimationResponse{} }
func (m *EstimationResponse) String() string { return proto.CompactTextString(m) }
func (*EstimationResponse) ProtoMessage()    {}
func (*EstimationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{3}
}
func (m *EstimationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EstimationResponse.Unmarshal(m, b)
}
func (m *EstimationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EstimationResponse.Marshal(b, m, deterministic)
}
func (dst *EstimationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstimationResponse.Merge(dst, src)
}
func (m *EstimationResponse) XXX_Size() int {
	return xxx_messageInfo_EstimationResponse.Size(m)
}
func (m *EstimationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EstimationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EstimationResponse proto.InternalMessageInfo

func (m *EstimationResponse) GetUsd() string {
	if m != nil {
		return m.Usd
	}
	return ""
}

type CreateAddressRequest struct {
	Account              string   `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Asset                string   `protobuf:"bytes,2,opt,name=asset" json:"asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAddressRequest) Reset()         { *m = CreateAddressRequest{} }
func (m *CreateAddressRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAddressRequest) ProtoMessage()    {}
func (*CreateAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{4}
}
func (m *CreateAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAddressRequest.Unmarshal(m, b)
}
func (m *CreateAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAddressRequest.Marshal(b, m, deterministic)
}
func (dst *CreateAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAddressRequest.Merge(dst, src)
}
func (m *CreateAddressRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAddressRequest.Size(m)
}
func (m *CreateAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAddressRequest proto.InternalMessageInfo

func (m *CreateAddressRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *CreateAddressRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type AccountAddressRequest struct {
	Account              string   `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Asset                string   `protobuf:"bytes,2,opt,name=asset" json:"asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountAddressRequest) Reset()         { *m = AccountAddressRequest{} }
func (m *AccountAddressRequest) String() string { return proto.CompactTextString(m) }
func (*AccountAddressRequest) ProtoMessage()    {}
func (*AccountAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{5}
}
func (m *AccountAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountAddressRequest.Unmarshal(m, b)
}
func (m *AccountAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountAddressRequest.Marshal(b, m, deterministic)
}
func (dst *AccountAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountAddressRequest.Merge(dst, src)
}
func (m *AccountAddressRequest) XXX_Size() int {
	return xxx_messageInfo_AccountAddressRequest.Size(m)
}
func (m *AccountAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountAddressRequest proto.InternalMessageInfo

func (m *AccountAddressRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *AccountAddressRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type PendingBalanceRequest struct {
	Account              string   `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Asset                string   `protobuf:"bytes,2,opt,name=asset" json:"asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PendingBalanceRequest) Reset()         { *m = PendingBalanceRequest{} }
func (m *PendingBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*PendingBalanceRequest) ProtoMessage()    {}
func (*PendingBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{6}
}
func (m *PendingBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingBalanceRequest.Unmarshal(m, b)
}
func (m *PendingBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingBalanceRequest.Marshal(b, m, deterministic)
}
func (dst *PendingBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingBalanceRequest.Merge(dst, src)
}
func (m *PendingBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_PendingBalanceRequest.Size(m)
}
func (m *PendingBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PendingBalanceRequest proto.InternalMessageInfo

func (m *PendingBalanceRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *PendingBalanceRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type PendingTransactionsRequest struct {
	Account              string   `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Asset                string   `protobuf:"bytes,2,opt,name=asset" json:"asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PendingTransactionsRequest) Reset()         { *m = PendingTransactionsRequest{} }
func (m *PendingTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*PendingTransactionsRequest) ProtoMessage()    {}
func (*PendingTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{7}
}
func (m *PendingTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingTransactionsRequest.Unmarshal(m, b)
}
func (m *PendingTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingTransactionsRequest.Marshal(b, m, deterministic)
}
func (dst *PendingTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingTransactionsRequest.Merge(dst, src)
}
func (m *PendingTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_PendingTransactionsRequest.Size(m)
}
func (m *PendingTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PendingTransactionsRequest proto.InternalMessageInfo

func (m *PendingTransactionsRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *PendingTransactionsRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type GenerateTransactionResponse struct {
	RawTx                []byte   `protobuf:"bytes,1,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	TxId                 string   `protobuf:"bytes,2,opt,name=tx_id,json=txId" json:"tx_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateTransactionResponse) Reset()         { *m = GenerateTransactionResponse{} }
func (m *GenerateTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GenerateTransactionResponse) ProtoMessage()    {}
func (*GenerateTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{8}
}
func (m *GenerateTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateTransactionResponse.Unmarshal(m, b)
}
func (m *GenerateTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateTransactionResponse.Marshal(b, m, deterministic)
}
func (dst *GenerateTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateTransactionResponse.Merge(dst, src)
}
func (m *GenerateTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_GenerateTransactionResponse.Size(m)
}
func (m *GenerateTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateTransactionResponse proto.InternalMessageInfo

func (m *GenerateTransactionResponse) GetRawTx() []byte {
	if m != nil {
		return m.RawTx
	}
	return nil
}

func (m *GenerateTransactionResponse) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

type SubcribeOnPaymentsRequest struct {
	// Asset is the acronim name of asset.
	Asset string `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	// Type is a type of network which is used to deliver the payment.
	Type                 string   `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubcribeOnPaymentsRequest) Reset()         { *m = SubcribeOnPaymentsRequest{} }
func (m *SubcribeOnPaymentsRequest) String() string { return proto.CompactTextString(m) }
func (*SubcribeOnPaymentsRequest) ProtoMessage()    {}
func (*SubcribeOnPaymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{9}
}
func (m *SubcribeOnPaymentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubcribeOnPaymentsRequest.Unmarshal(m, b)
}
func (m *SubcribeOnPaymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubcribeOnPaymentsRequest.Marshal(b, m, deterministic)
}
func (dst *SubcribeOnPaymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubcribeOnPaymentsRequest.Merge(dst, src)
}
func (m *SubcribeOnPaymentsRequest) XXX_Size() int {
	return xxx_messageInfo_SubcribeOnPaymentsRequest.Size(m)
}
func (m *SubcribeOnPaymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubcribeOnPaymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubcribeOnPaymentsRequest proto.InternalMessageInfo

func (m *SubcribeOnPaymentsRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *SubcribeOnPaymentsRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

// BlockchainPendingPayment is the transaction with confirmations number lower
// than required by the payment system to be treated as confirmed.
type BlockchainPendingPayment struct {
	Payment *Payment `protobuf:"bytes,1,opt,name=payment" json:"payment,omitempty"`
	// Confirmations is the number of confirmations.
	Confirmations int64 `protobuf:"varint,2,opt,name=confirmations" json:"confirmations,omitempty"`
	// ConfirmationsLeft is the number of confirmations left in order to
	// interpret the transaction as confirmed.
	ConfirmationsLeft    int64    `protobuf:"varint,3,opt,name=confirmations_left,json=confirmationsLeft" json:"confirmations_left,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockchainPendingPayment) Reset()         { *m = BlockchainPendingPayment{} }
func (m *BlockchainPendingPayment) String() string { return proto.CompactTextString(m) }
func (*BlockchainPendingPayment) ProtoMessage()    {}
func (*BlockchainPendingPayment) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{10}
}
func (m *BlockchainPendingPayment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockchainPendingPayment.Unmarshal(m, b)
}
func (m *BlockchainPendingPayment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockchainPendingPayment.Marshal(b, m, deterministic)
}
func (dst *BlockchainPendingPayment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockchainPendingPayment.Merge(dst, src)
}
func (m *BlockchainPendingPayment) XXX_Size() int {
	return xxx_messageInfo_BlockchainPendingPayment.Size(m)
}
func (m *BlockchainPendingPayment) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockchainPendingPayment.DiscardUnknown(m)
}

var xxx_messageInfo_BlockchainPendingPayment proto.InternalMessageInfo

func (m *BlockchainPendingPayment) GetPayment() *Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

func (m *BlockchainPendingPayment) GetConfirmations() int64 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *BlockchainPendingPayment) GetConfirmationsLeft() int64 {
	if m != nil {
		return m.ConfirmationsLeft
	}
	return 0
}

// Payment is the structure which describe the action of funds movement from
// one user to another.
type Payment struct {
	// ID is an number which identifies the transaction inside the payment
	// system.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Amount is an number of money which is translated from one User to
	// another in this transaction.
	Amount string `protobuf:"bytes,2,opt,name=amount" json:"amount,omitempty"`
	// Account is the receiver account.
	Account string `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	// Address is an address of receiver.
	Address string `protobuf:"bytes,4,opt,name=address" json:"address,omitempty"`
	// Type is a type of network which is used to deliver the payment.
	Type                 string   `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payment) Reset()         { *m = Payment{} }
func (m *Payment) String() string { return proto.CompactTextString(m) }
func (*Payment) ProtoMessage()    {}
func (*Payment) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{11}
}
func (m *Payment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payment.Unmarshal(m, b)
}
func (m *Payment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payment.Marshal(b, m, deterministic)
}
func (dst *Payment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payment.Merge(dst, src)
}
func (m *Payment) XXX_Size() int {
	return xxx_messageInfo_Payment.Size(m)
}
func (m *Payment) XXX_DiscardUnknown() {
	xxx_messageInfo_Payment.DiscardUnknown(m)
}

var xxx_messageInfo_Payment proto.InternalMessageInfo

func (m *Payment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Payment) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *Payment) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *Payment) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Payment) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type EmtpyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmtpyResponse) Reset()         { *m = EmtpyResponse{} }
func (m *EmtpyResponse) String() string { return proto.CompactTextString(m) }
func (*EmtpyResponse) ProtoMessage()    {}
func (*EmtpyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{12}
}
func (m *EmtpyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmtpyResponse.Unmarshal(m, b)
}
func (m *EmtpyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmtpyResponse.Marshal(b, m, deterministic)
}
func (dst *EmtpyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmtpyResponse.Merge(dst, src)
}
func (m *EmtpyResponse) XXX_Size() int {
	return xxx_messageInfo_EmtpyResponse.Size(m)
}
func (m *EmtpyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmtpyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmtpyResponse proto.InternalMessageInfo

type Balance struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Balance) Reset()         { *m = Balance{} }
func (m *Balance) String() string { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()    {}
func (*Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{13}
}
func (m *Balance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Balance.Unmarshal(m, b)
}
func (m *Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Balance.Marshal(b, m, deterministic)
}
func (dst *Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Balance.Merge(dst, src)
}
func (m *Balance) XXX_Size() int {
	return xxx_messageInfo_Balance.Size(m)
}
func (m *Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_Balance proto.InternalMessageInfo

func (m *Balance) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type Address struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{14}
}
func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (dst *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(dst, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type Invoice struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Invoice) Reset()         { *m = Invoice{} }
func (m *Invoice) String() string { return proto.CompactTextString(m) }
func (*Invoice) ProtoMessage()    {}
func (*Invoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{15}
}
func (m *Invoice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invoice.Unmarshal(m, b)
}
func (m *Invoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invoice.Marshal(b, m, deterministic)
}
func (dst *Invoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invoice.Merge(dst, src)
}
func (m *Invoice) XXX_Size() int {
	return xxx_messageInfo_Invoice.Size(m)
}
func (m *Invoice) XXX_DiscardUnknown() {
	xxx_messageInfo_Invoice.DiscardUnknown(m)
}

var xxx_messageInfo_Invoice proto.InternalMessageInfo

func (m *Invoice) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type CheckReachableRequest struct {
	Asset                string   `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	IdentityKey          string   `protobuf:"bytes,2,opt,name=identity_key,json=identityKey" json:"identity_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckReachableRequest) Reset()         { *m = CheckReachableRequest{} }
func (m *CheckReachableRequest) String() string { return proto.CompactTextString(m) }
func (*CheckReachableRequest) ProtoMessage()    {}
func (*CheckReachableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{16}
}
func (m *CheckReachableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckReachableRequest.Unmarshal(m, b)
}
func (m *CheckReachableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckReachableRequest.Marshal(b, m, deterministic)
}
func (dst *CheckReachableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckReachableRequest.Merge(dst, src)
}
func (m *CheckReachableRequest) XXX_Size() int {
	return xxx_messageInfo_CheckReachableRequest.Size(m)
}
func (m *CheckReachableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckReachableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckReachableRequest proto.InternalMessageInfo

func (m *CheckReachableRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *CheckReachableRequest) GetIdentityKey() string {
	if m != nil {
		return m.IdentityKey
	}
	return ""
}

type PendingTransactionsResponse struct {
	Payments             []*BlockchainPendingPayment `protobuf:"bytes,1,rep,name=payments" json:"payments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *PendingTransactionsResponse) Reset()         { *m = PendingTransactionsResponse{} }
func (m *PendingTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*PendingTransactionsResponse) ProtoMessage()    {}
func (*PendingTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{17}
}
func (m *PendingTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingTransactionsResponse.Unmarshal(m, b)
}
func (m *PendingTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingTransactionsResponse.Marshal(b, m, deterministic)
}
func (dst *PendingTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingTransactionsResponse.Merge(dst, src)
}
func (m *PendingTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_PendingTransactionsResponse.Size(m)
}
func (m *PendingTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PendingTransactionsResponse proto.InternalMessageInfo

func (m *PendingTransactionsResponse) GetPayments() []*BlockchainPendingPayment {
	if m != nil {
		return m.Payments
	}
	return nil
}

type GenerateTransactionRequest struct {
	Asset                string   `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	ReceiverAddress      string   `protobuf:"bytes,2,opt,name=receiver_address,json=receiverAddress" json:"receiver_address,omitempty"`
	Amount               string   `protobuf:"bytes,3,opt,name=amount" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateTransactionRequest) Reset()         { *m = GenerateTransactionRequest{} }
func (m *GenerateTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*GenerateTransactionRequest) ProtoMessage()    {}
func (*GenerateTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{18}
}
func (m *GenerateTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateTransactionRequest.Unmarshal(m, b)
}
func (m *GenerateTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateTransactionRequest.Marshal(b, m, deterministic)
}
func (dst *GenerateTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateTransactionRequest.Merge(dst, src)
}
func (m *GenerateTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateTransactionRequest.Size(m)
}
func (m *GenerateTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateTransactionRequest proto.InternalMessageInfo

func (m *GenerateTransactionRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *GenerateTransactionRequest) GetReceiverAddress() string {
	if m != nil {
		return m.ReceiverAddress
	}
	return ""
}

func (m *GenerateTransactionRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type SendTransactionRequest struct {
	Asset                string   `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	RawTx                []byte   `protobuf:"bytes,2,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionRequest) Reset()         { *m = SendTransactionRequest{} }
func (m *SendTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SendTransactionRequest) ProtoMessage()    {}
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{19}
}
func (m *SendTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionRequest.Unmarshal(m, b)
}
func (m *SendTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionRequest.Marshal(b, m, deterministic)
}
func (dst *SendTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionRequest.Merge(dst, src)
}
func (m *SendTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SendTransactionRequest.Size(m)
}
func (m *SendTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionRequest proto.InternalMessageInfo

func (m *SendTransactionRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *SendTransactionRequest) GetRawTx() []byte {
	if m != nil {
		return m.RawTx
	}
	return nil
}

type InfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRequest) Reset()         { *m = InfoRequest{} }
func (m *InfoRequest) String() string { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()    {}
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{20}
}
func (m *InfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRequest.Unmarshal(m, b)
}
func (m *InfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRequest.Marshal(b, m, deterministic)
}
func (dst *InfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRequest.Merge(dst, src)
}
func (m *InfoRequest) XXX_Size() int {
	return xxx_messageInfo_InfoRequest.Size(m)
}
func (m *InfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRequest proto.InternalMessageInfo

type LightningInfo struct {
	Host string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	// Port is the port over which other peers could connect to the lightning
	// network daemon.
	Port string `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
	// MinAmount is the minimal amount of funds which could be used for
	// payment via the lightning network daemon.
	MinAmount string `protobuf:"bytes,3,opt,name=min_amount,json=minAmount" json:"min_amount,omitempty"`
	// MaxAmount is the maximum amount of funds which could be used for
	// payment via lightning network deaemon.
	MaxAmount string `protobuf:"bytes,4,opt,name=max_amount,json=maxAmount" json:"max_amount,omitempty"`
	// IdentityPubKey of lightning network node.
	IdentityPubkey string `protobuf:"bytes,5,opt,name=identity_pubkey,json=identityPubkey" json:"identity_pubkey,omitempty"`
	// Alias is the string which represents the lightning network node in the
	// network, this data could be seen in peer-to-peer discovery messages.
	Alias string `protobuf:"bytes,6,opt,name=alias" json:"alias,omitempty"`
	// NumPendingChannels is the number of channels which are in the state of
	// awaitaning for blockchain confirmation.
	NumPendingChannels uint32 `protobuf:"varint,7,opt,name=num_pending_channels,json=numPendingChannels" json:"num_pending_channels,omitempty"`
	// NumPendingChannels is the number of channels which were confirmed and
	// could be used for payments.
	NumActiveChannels uint32 `protobuf:"varint,8,opt,name=num_active_channels,json=numActiveChannels" json:"num_active_channels,omitempty"`
	// Number of peers
	NumPeers uint32 `protobuf:"varint,9,opt,name=num_peers,json=numPeers" json:"num_peers,omitempty"`
	// The node's current view of the height of the best block
	BlockHeight uint32 `protobuf:"varint,10,opt,name=block_height,json=blockHeight" json:"block_height,omitempty"`
	// The node's current view of the hash of the best block
	BlockHash            string   `protobuf:"bytes,11,opt,name=block_hash,json=blockHash" json:"block_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LightningInfo) Reset()         { *m = LightningInfo{} }
func (m *LightningInfo) String() string { return proto.CompactTextString(m) }
func (*LightningInfo) ProtoMessage()    {}
func (*LightningInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{21}
}
func (m *LightningInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LightningInfo.Unmarshal(m, b)
}
func (m *LightningInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LightningInfo.Marshal(b, m, deterministic)
}
func (dst *LightningInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LightningInfo.Merge(dst, src)
}
func (m *LightningInfo) XXX_Size() int {
	return xxx_messageInfo_LightningInfo.Size(m)
}
func (m *LightningInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LightningInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LightningInfo proto.InternalMessageInfo

func (m *LightningInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *LightningInfo) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *LightningInfo) GetMinAmount() string {
	if m != nil {
		return m.MinAmount
	}
	return ""
}

func (m *LightningInfo) GetMaxAmount() string {
	if m != nil {
		return m.MaxAmount
	}
	return ""
}

func (m *LightningInfo) GetIdentityPubkey() string {
	if m != nil {
		return m.IdentityPubkey
	}
	return ""
}

func (m *LightningInfo) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *LightningInfo) GetNumPendingChannels() uint32 {
	if m != nil {
		return m.NumPendingChannels
	}
	return 0
}

func (m *LightningInfo) GetNumActiveChannels() uint32 {
	if m != nil {
		return m.NumActiveChannels
	}
	return 0
}

func (m *LightningInfo) GetNumPeers() uint32 {
	if m != nil {
		return m.NumPeers
	}
	return 0
}

func (m *LightningInfo) GetBlockHeight() uint32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *LightningInfo) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

type InfoResponse struct {
	// Net represent currently configures blockchain network supported by
	// service.
	Net Net `protobuf:"varint,1,opt,name=net,enum=crpc.Net" json:"net,omitempty"`
	// Time is the current connector local time.
	Time                 string         `protobuf:"bytes,2,opt,name=time" json:"time,omitempty"`
	LightingInfo         *LightningInfo `protobuf:"bytes,3,opt,name=lighting_info,json=lightingInfo" json:"lighting_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *InfoResponse) Reset()         { *m = InfoResponse{} }
func (m *InfoResponse) String() string { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()    {}
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{22}
}
func (m *InfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResponse.Unmarshal(m, b)
}
func (m *InfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResponse.Marshal(b, m, deterministic)
}
func (dst *InfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResponse.Merge(dst, src)
}
func (m *InfoResponse) XXX_Size() int {
	return xxx_messageInfo_InfoResponse.Size(m)
}
func (m *InfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResponse proto.InternalMessageInfo

func (m *InfoResponse) GetNet() Net {
	if m != nil {
		return m.Net
	}
	return Net_Simnet
}

func (m *InfoResponse) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *InfoResponse) GetLightingInfo() *LightningInfo {
	if m != nil {
		return m.LightingInfo
	}
	return nil
}

type CreateInvoiceRequest struct {
	Asset                string   `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Account              string   `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
	Amount               string   `protobuf:"bytes,3,opt,name=amount" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateInvoiceRequest) Reset()         { *m = CreateInvoiceRequest{} }
func (m *CreateInvoiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateInvoiceRequest) ProtoMessage()    {}
func (*CreateInvoiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{23}
}
func (m *CreateInvoiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateInvoiceRequest.Unmarshal(m, b)
}
func (m *CreateInvoiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateInvoiceRequest.Marshal(b, m, deterministic)
}
func (dst *CreateInvoiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInvoiceRequest.Merge(dst, src)
}
func (m *CreateInvoiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateInvoiceRequest.Size(m)
}
func (m *CreateInvoiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInvoiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInvoiceRequest proto.InternalMessageInfo

func (m *CreateInvoiceRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *CreateInvoiceRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *CreateInvoiceRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type SendPaymentRequest struct {
	Asset                string   `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Invoice              string   `protobuf:"bytes,2,opt,name=invoice" json:"invoice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendPaymentRequest) Reset()         { *m = SendPaymentRequest{} }
func (m *SendPaymentRequest) String() string { return proto.CompactTextString(m) }
func (*SendPaymentRequest) ProtoMessage()    {}
func (*SendPaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{24}
}
func (m *SendPaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendPaymentRequest.Unmarshal(m, b)
}
func (m *SendPaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendPaymentRequest.Marshal(b, m, deterministic)
}
func (dst *SendPaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendPaymentRequest.Merge(dst, src)
}
func (m *SendPaymentRequest) XXX_Size() int {
	return xxx_messageInfo_SendPaymentRequest.Size(m)
}
func (m *SendPaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendPaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendPaymentRequest proto.InternalMessageInfo

func (m *SendPaymentRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *SendPaymentRequest) GetInvoice() string {
	if m != nil {
		return m.Invoice
	}
	return ""
}

type CheckReachableResponse struct {
	IsReachable          bool     `protobuf:"varint,2,opt,name=isReachable" json:"isReachable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckReachableResponse) Reset()         { *m = CheckReachableResponse{} }
func (m *CheckReachableResponse) String() string { return proto.CompactTextString(m) }
func (*CheckReachableResponse) ProtoMessage()    {}
func (*CheckReachableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_d387f306bb471e35, []int{25}
}
func (m *CheckReachableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckReachableResponse.Unmarshal(m, b)
}
func (m *CheckReachableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckReachableResponse.Marshal(b, m, deterministic)
}
func (dst *CheckReachableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckReachableResponse.Merge(dst, src)
}
func (m *CheckReachableResponse) XXX_Size() int {
	return xxx_messageInfo_CheckReachableResponse.Size(m)
}
func (m *CheckReachableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckReachableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckReachableResponse proto.InternalMessageInfo

func (m *CheckReachableResponse) GetIsReachable() bool {
	if m != nil {
		return m.IsReachable
	}
	return false
}

func init() {
	proto.RegisterType((*PaymentReceivedRequest)(nil), "crpc.PaymentReceivedRequest")
	proto.RegisterType((*PaymentReceivedResponse)(nil), "crpc.PaymentReceivedResponse")
	proto.RegisterType((*EstimateRequest)(nil), "crpc.EstimateRequest")
	proto.RegisterType((*EstimationResponse)(nil), "crpc.EstimationResponse")
	proto.RegisterType((*CreateAddressRequest)(nil), "crpc.CreateAddressRequest")
	proto.RegisterType((*AccountAddressRequest)(nil), "crpc.AccountAddressRequest")
	proto.RegisterType((*PendingBalanceRequest)(nil), "crpc.PendingBalanceRequest")
	proto.RegisterType((*PendingTransactionsRequest)(nil), "crpc.PendingTransactionsRequest")
	proto.RegisterType((*GenerateTransactionResponse)(nil), "crpc.GenerateTransactionResponse")
	proto.RegisterType((*SubcribeOnPaymentsRequest)(nil), "crpc.SubcribeOnPaymentsRequest")
	proto.RegisterType((*BlockchainPendingPayment)(nil), "crpc.BlockchainPendingPayment")
	proto.RegisterType((*Payment)(nil), "crpc.Payment")
	proto.RegisterType((*EmtpyResponse)(nil), "crpc.EmtpyResponse")
	proto.RegisterType((*Balance)(nil), "crpc.Balance")
	proto.RegisterType((*Address)(nil), "crpc.Address")
	proto.RegisterType((*Invoice)(nil), "crpc.Invoice")
	proto.RegisterType((*CheckReachableRequest)(nil), "crpc.CheckReachableRequest")
	proto.RegisterType((*PendingTransactionsResponse)(nil), "crpc.PendingTransactionsResponse")
	proto.RegisterType((*GenerateTransactionRequest)(nil), "crpc.GenerateTransactionRequest")
	proto.RegisterType((*SendTransactionRequest)(nil), "crpc.SendTransactionRequest")
	proto.RegisterType((*InfoRequest)(nil), "crpc.InfoRequest")
	proto.RegisterType((*LightningInfo)(nil), "crpc.LightningInfo")
	proto.RegisterType((*InfoResponse)(nil), "crpc.InfoResponse")
	proto.RegisterType((*CreateInvoiceRequest)(nil), "crpc.CreateInvoiceRequest")
	proto.RegisterType((*SendPaymentRequest)(nil), "crpc.SendPaymentRequest")
	proto.RegisterType((*CheckReachableResponse)(nil), "crpc.CheckReachableResponse")
	proto.RegisterEnum("crpc.Asset", Asset_name, Asset_value)
	proto.RegisterEnum("crpc.Market", Market_name, Market_value)
	proto.RegisterEnum("crpc.Net", Net_name, Net_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConnectorClient is the client API for Connector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConnectorClient interface {
	//
	// CreateAddress is used to create deposit address in choosen blockchain
	// network.
	//
	// NOTE: Works only for blockchain daemons.
	CreateAddress(ctx context.Context, in *CreateAddressRequest, opts ...grpc.CallOption) (*Address, error)
	//
	// AccountAddress return the deposit address of account.
	//
	// NOTE: Works only for blockchain daemons.
	AccountAddress(ctx context.Context, in *AccountAddressRequest, opts ...grpc.CallOption) (*Address, error)
	//
	// PendingBalance return the amount of funds waiting to be confirmed.
	//
	// NOTE: Works only for blockchain daemons.
	PendingBalance(ctx context.Context, in *PendingBalanceRequest, opts ...grpc.CallOption) (*Balance, error)
	//
	// PendingTransactions return the transactions which has confirmation
	// number lower the required by payment system.
	//
	// NOTE: Works only for blockchain daemons.
	PendingTransactions(ctx context.Context, in *PendingTransactionsRequest, opts ...grpc.CallOption) (*PendingTransactionsResponse, error)
	//
	// GenerateTransaction generates raw blockchain transaction.
	//
	// NOTE: Blockchain endpoint.
	GenerateTransaction(ctx context.Context, in *GenerateTransactionRequest, opts ...grpc.CallOption) (*GenerateTransactionResponse, error)
	//
	// SendTransaction send the given transaction to the blockchain network.
	//
	// NOTE: Works only for blockchain daemons.
	SendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*EmtpyResponse, error)
	//
	// Info returns the information about the connector, it configaration and
	// network information of daemon with which it is working.
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
	//
	// CreateInvoice creates recept for sender lightning node which contains
	// the information about receiver node and
	//
	// NOTE: Works only for lightning network daemons.
	CreateInvoice(ctx context.Context, in *CreateInvoiceRequest, opts ...grpc.CallOption) (*Invoice, error)
	//
	// SendPayment is used to send specific amount of money inside lightning
	// network.
	//
	// NOTE: Works only for lightning network daemons.
	SendPayment(ctx context.Context, in *SendPaymentRequest, opts ...grpc.CallOption) (*EmtpyResponse, error)
	//
	// CheckReachable checks that given node can be reached from our
	// lightning node.
	//
	// NOTE: Works only for lightning network daemons.
	CheckReachable(ctx context.Context, in *CheckReachableRequest, opts ...grpc.CallOption) (*CheckReachableResponse, error)
	//
	// Estimate estimates the dollar price of the choosen asset.
	Estimate(ctx context.Context, in *EstimateRequest, opts ...grpc.CallOption) (*EstimationResponse, error)
	//
	// PaymentReceived is used to determine if payment with given ID is received
	PaymentReceived(ctx context.Context, in *PaymentReceivedRequest, opts ...grpc.CallOption) (*PaymentReceivedResponse, error)
}

type connectorClient struct {
	cc *grpc.ClientConn
}

func NewConnectorClient(cc *grpc.ClientConn) ConnectorClient {
	return &connectorClient{cc}
}

func (c *connectorClient) CreateAddress(ctx context.Context, in *CreateAddressRequest, opts ...grpc.CallOption) (*Address, error) {
	out := new(Address)
	err := c.cc.Invoke(ctx, "/crpc.Connector/CreateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectorClient) AccountAddress(ctx context.Context, in *AccountAddressRequest, opts ...grpc.CallOption) (*Address, error) {
	out := new(Address)
	err := c.cc.Invoke(ctx, "/crpc.Connector/AccountAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectorClient) PendingBalance(ctx context.Context, in *PendingBalanceRequest, opts ...grpc.CallOption) (*Balance, error) {
	out := new(Balance)
	err := c.cc.Invoke(ctx, "/crpc.Connector/PendingBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectorClient) PendingTransactions(ctx context.Context, in *PendingTransactionsRequest, opts ...grpc.CallOption) (*PendingTransactionsResponse, error) {
	out := new(PendingTransactionsResponse)
	err := c.cc.Invoke(ctx, "/crpc.Connector/PendingTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectorClient) GenerateTransaction(ctx context.Context, in *GenerateTransactionRequest, opts ...grpc.CallOption) (*GenerateTransactionResponse, error) {
	out := new(GenerateTransactionResponse)
	err := c.cc.Invoke(ctx, "/crpc.Connector/GenerateTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectorClient) SendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*EmtpyResponse, error) {
	out := new(EmtpyResponse)
	err := c.cc.Invoke(ctx, "/crpc.Connector/SendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectorClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/crpc.Connector/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectorClient) CreateInvoice(ctx context.Context, in *CreateInvoiceRequest, opts ...grpc.CallOption) (*Invoice, error) {
	out := new(Invoice)
	err := c.cc.Invoke(ctx, "/crpc.Connector/CreateInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectorClient) SendPayment(ctx context.Context, in *SendPaymentRequest, opts ...grpc.CallOption) (*EmtpyResponse, error) {
	out := new(EmtpyResponse)
	err := c.cc.Invoke(ctx, "/crpc.Connector/SendPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectorClient) CheckReachable(ctx context.Context, in *CheckReachableRequest, opts ...grpc.CallOption) (*CheckReachableResponse, error) {
	out := new(CheckReachableResponse)
	err := c.cc.Invoke(ctx, "/crpc.Connector/CheckReachable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectorClient) Estimate(ctx context.Context, in *EstimateRequest, opts ...grpc.CallOption) (*EstimationResponse, error) {
	out := new(EstimationResponse)
	err := c.cc.Invoke(ctx, "/crpc.Connector/Estimate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectorClient) PaymentReceived(ctx context.Context, in *PaymentReceivedRequest, opts ...grpc.CallOption) (*PaymentReceivedResponse, error) {
	out := new(PaymentReceivedResponse)
	err := c.cc.Invoke(ctx, "/crpc.Connector/PaymentReceived", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConnectorServer is the server API for Connector service.
type ConnectorServer interface {
	//
	// CreateAddress is used to create deposit address in choosen blockchain
	// network.
	//
	// NOTE: Works only for blockchain daemons.
	CreateAddress(context.Context, *CreateAddressRequest) (*Address, error)
	//
	// AccountAddress return the deposit address of account.
	//
	// NOTE: Works only for blockchain daemons.
	AccountAddress(context.Context, *AccountAddressRequest) (*Address, error)
	//
	// PendingBalance return the amount of funds waiting to be confirmed.
	//
	// NOTE: Works only for blockchain daemons.
	PendingBalance(context.Context, *PendingBalanceRequest) (*Balance, error)
	//
	// PendingTransactions return the transactions which has confirmation
	// number lower the required by payment system.
	//
	// NOTE: Works only for blockchain daemons.
	PendingTransactions(context.Context, *PendingTransactionsRequest) (*PendingTransactionsResponse, error)
	//
	// GenerateTransaction generates raw blockchain transaction.
	//
	// NOTE: Blockchain endpoint.
	GenerateTransaction(context.Context, *GenerateTransactionRequest) (*GenerateTransactionResponse, error)
	//
	// SendTransaction send the given transaction to the blockchain network.
	//
	// NOTE: Works only for blockchain daemons.
	SendTransaction(context.Context, *SendTransactionRequest) (*EmtpyResponse, error)
	//
	// Info returns the information about the connector, it configaration and
	// network information of daemon with which it is working.
	Info(context.Context, *InfoRequest) (*InfoResponse, error)
	//
	// CreateInvoice creates recept for sender lightning node which contains
	// the information about receiver node and
	//
	// NOTE: Works only for lightning network daemons.
	CreateInvoice(context.Context, *CreateInvoiceRequest) (*Invoice, error)
	//
	// SendPayment is used to send specific amount of money inside lightning
	// network.
	//
	// NOTE: Works only for lightning network daemons.
	SendPayment(context.Context, *SendPaymentRequest) (*EmtpyResponse, error)
	//
	// CheckReachable checks that given node can be reached from our
	// lightning node.
	//
	// NOTE: Works only for lightning network daemons.
	CheckReachable(context.Context, *CheckReachableRequest) (*CheckReachableResponse, error)
	//
	// Estimate estimates the dollar price of the choosen asset.
	Estimate(context.Context, *EstimateRequest) (*EstimationResponse, error)
	//
	// PaymentReceived is used to determine if payment with given ID is received
	PaymentReceived(context.Context, *PaymentReceivedRequest) (*PaymentReceivedResponse, error)
}

func RegisterConnectorServer(s *grpc.Server, srv ConnectorServer) {
	s.RegisterService(&_Connector_serviceDesc, srv)
}

func _Connector_CreateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).CreateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crpc.Connector/CreateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).CreateAddress(ctx, req.(*CreateAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connector_AccountAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).AccountAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crpc.Connector/AccountAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).AccountAddress(ctx, req.(*AccountAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connector_PendingBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PendingBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).PendingBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crpc.Connector/PendingBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).PendingBalance(ctx, req.(*PendingBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connector_PendingTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PendingTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).PendingTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crpc.Connector/PendingTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).PendingTransactions(ctx, req.(*PendingTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connector_GenerateTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).GenerateTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crpc.Connector/GenerateTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).GenerateTransaction(ctx, req.(*GenerateTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connector_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crpc.Connector/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).SendTransaction(ctx, req.(*SendTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connector_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crpc.Connector/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).Info(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connector_CreateInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).CreateInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crpc.Connector/CreateInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).CreateInvoice(ctx, req.(*CreateInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connector_SendPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).SendPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crpc.Connector/SendPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).SendPayment(ctx, req.(*SendPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connector_CheckReachable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckReachableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).CheckReachable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crpc.Connector/CheckReachable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).CheckReachable(ctx, req.(*CheckReachableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connector_Estimate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EstimateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).Estimate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crpc.Connector/Estimate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).Estimate(ctx, req.(*EstimateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connector_PaymentReceived_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentReceivedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).PaymentReceived(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crpc.Connector/PaymentReceived",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).PaymentReceived(ctx, req.(*PaymentReceivedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Connector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "crpc.Connector",
	HandlerType: (*ConnectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAddress",
			Handler:    _Connector_CreateAddress_Handler,
		},
		{
			MethodName: "AccountAddress",
			Handler:    _Connector_AccountAddress_Handler,
		},
		{
			MethodName: "PendingBalance",
			Handler:    _Connector_PendingBalance_Handler,
		},
		{
			MethodName: "PendingTransactions",
			Handler:    _Connector_PendingTransactions_Handler,
		},
		{
			MethodName: "GenerateTransaction",
			Handler:    _Connector_GenerateTransaction_Handler,
		},
		{
			MethodName: "SendTransaction",
			Handler:    _Connector_SendTransaction_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _Connector_Info_Handler,
		},
		{
			MethodName: "CreateInvoice",
			Handler:    _Connector_CreateInvoice_Handler,
		},
		{
			MethodName: "SendPayment",
			Handler:    _Connector_SendPayment_Handler,
		},
		{
			MethodName: "CheckReachable",
			Handler:    _Connector_CheckReachable_Handler,
		},
		{
			MethodName: "Estimate",
			Handler:    _Connector_Estimate_Handler,
		},
		{
			MethodName: "PaymentReceived",
			Handler:    _Connector_PaymentReceived_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_rpc_d387f306bb471e35) }

var fileDescriptor_rpc_d387f306bb471e35 = []byte{
	// 1157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0x5b, 0x4f, 0x1b, 0x47,
	0x14, 0x8e, 0x2f, 0xf8, 0x72, 0x8c, 0xb1, 0x19, 0x2e, 0xdd, 0x9a, 0x50, 0x91, 0x55, 0xd5, 0x50,
	0xaa, 0xa0, 0x8a, 0x2a, 0x52, 0x45, 0x23, 0x55, 0xb6, 0x71, 0x03, 0x0a, 0xa1, 0x68, 0xf1, 0x4b,
	0xf3, 0x50, 0x6b, 0xbc, 0x1e, 0xf0, 0x08, 0xef, 0xac, 0xbb, 0x33, 0x26, 0xf6, 0x3f, 0xe9, 0x0f,
	0xea, 0x5f, 0xea, 0x7b, 0x35, 0xb7, 0xf5, 0x2e, 0x5d, 0x93, 0x2a, 0x7d, 0x9b, 0x73, 0xfb, 0xe6,
	0xec, 0xb9, 0xcd, 0x59, 0xa8, 0x46, 0x53, 0xff, 0x78, 0x1a, 0x85, 0x22, 0x44, 0x45, 0x3f, 0x9a,
	0xfa, 0xee, 0x21, 0xec, 0x5e, 0xe3, 0x45, 0x40, 0x98, 0xf0, 0x88, 0x4f, 0xe8, 0x03, 0x19, 0x79,
	0xe4, 0x8f, 0x19, 0xe1, 0x02, 0x6d, 0x40, 0x9e, 0x8e, 0x9c, 0xdc, 0x41, 0xee, 0xb0, 0xea, 0xe5,
	0xe9, 0xc8, 0x7d, 0x0d, 0x5f, 0xfc, 0x4b, 0x93, 0x4f, 0x43, 0xc6, 0x09, 0x6a, 0x41, 0x25, 0x32,
	0x3c, 0x65, 0x50, 0xf1, 0x62, 0xda, 0xfd, 0x19, 0x1a, 0x3d, 0x2e, 0x68, 0x80, 0x05, 0xb1, 0xc8,
	0xdb, 0xb0, 0x86, 0x39, 0x27, 0xc2, 0x80, 0x6b, 0x02, 0xed, 0x42, 0x09, 0x07, 0xe1, 0x8c, 0x09,
	0x27, 0xaf, 0xd8, 0x86, 0x72, 0xbf, 0x01, 0x64, 0x00, 0x68, 0xc8, 0xe2, 0x2b, 0x9b, 0x50, 0x98,
	0x71, 0xeb, 0x9e, 0x3c, 0xba, 0xbf, 0xc0, 0x76, 0x37, 0x22, 0x58, 0x90, 0xf6, 0x68, 0x14, 0x11,
	0xce, 0xed, 0x6d, 0x0e, 0x94, 0xb1, 0xef, 0x2b, 0x60, 0xad, 0x6d, 0xc9, 0xa5, 0x1f, 0xf9, 0x84,
	0x1f, 0xee, 0x5b, 0xd8, 0x69, 0x6b, 0x85, 0xff, 0x0f, 0x74, 0x4d, 0xd8, 0x88, 0xb2, 0xbb, 0x0e,
	0x9e, 0x60, 0xe6, 0x93, 0xcf, 0x05, 0xba, 0x84, 0x96, 0x01, 0xea, 0x47, 0x98, 0x71, 0xec, 0xcb,
	0x48, 0x7c, 0xb6, 0x5b, 0x17, 0xb0, 0xf7, 0x96, 0x30, 0x12, 0x61, 0x41, 0x12, 0x70, 0x71, 0x60,
	0x77, 0xa0, 0x14, 0xe1, 0x8f, 0x03, 0x31, 0x57, 0x68, 0xeb, 0xde, 0x5a, 0x84, 0x3f, 0xf6, 0xe7,
	0x68, 0x0b, 0xd6, 0xc4, 0x7c, 0x40, 0x47, 0x06, 0xab, 0x28, 0xe6, 0x17, 0x23, 0xb7, 0x07, 0x5f,
	0xde, 0xcc, 0x86, 0x7e, 0x44, 0x87, 0xe4, 0x57, 0x66, 0x8a, 0x83, 0x3f, 0x9d, 0x65, 0x04, 0x45,
	0xb1, 0x98, 0x92, 0x18, 0x66, 0x31, 0x25, 0xee, 0x9f, 0x39, 0x70, 0x3a, 0x93, 0xd0, 0xbf, 0xf7,
	0xc7, 0x98, 0x32, 0xf3, 0xa9, 0x06, 0x0e, 0xbd, 0x84, 0xf2, 0x54, 0x1f, 0x15, 0x50, 0xed, 0xa4,
	0x7e, 0x2c, 0x0b, 0xf7, 0xd8, 0xd6, 0xa2, 0x95, 0xa2, 0xaf, 0xa1, 0xee, 0x87, 0xec, 0x96, 0x46,
	0xba, 0x52, 0xb8, 0xba, 0xa2, 0xe0, 0xa5, 0x99, 0xe8, 0x15, 0xa0, 0x14, 0x63, 0x30, 0x21, 0xb7,
	0xc2, 0x29, 0x28, 0xd5, 0xcd, 0x94, 0xe4, 0x92, 0xdc, 0x0a, 0x77, 0x01, 0x65, 0xeb, 0xc8, 0xa3,
	0x7e, 0x58, 0x55, 0xaf, 0xc9, 0x7c, 0x14, 0xd2, 0xf9, 0x90, 0x12, 0x5d, 0x52, 0x4e, 0xd1, 0x48,
	0x34, 0x19, 0x47, 0x65, 0x2d, 0x11, 0x95, 0x06, 0xd4, 0x7b, 0x81, 0x98, 0x2e, 0x6c, 0x66, 0xdc,
	0x7d, 0x28, 0x9b, 0x42, 0x92, 0xfa, 0x23, 0x2c, 0xb0, 0xf1, 0x46, 0x9d, 0xa5, 0xb8, 0xbd, 0x84,
	0xcb, 0x12, 0x5f, 0xb0, 0x87, 0x90, 0xae, 0xb0, 0xbe, 0x86, 0x9d, 0xee, 0x98, 0xf8, 0xf7, 0x1e,
	0xc1, 0xfe, 0x18, 0x0f, 0x27, 0x9f, 0x68, 0xd6, 0x17, 0xb0, 0x4e, 0x47, 0x84, 0x09, 0x2a, 0x16,
	0x83, 0x7b, 0xb2, 0x30, 0x21, 0xa8, 0x59, 0xde, 0x3b, 0xb2, 0x70, 0x7f, 0x83, 0xbd, 0xcc, 0xaa,
	0x35, 0x75, 0x76, 0x0a, 0x15, 0x93, 0x39, 0xee, 0xe4, 0x0e, 0x0a, 0x87, 0xb5, 0x93, 0xaf, 0x74,
	0x62, 0x57, 0x55, 0x82, 0x17, 0xeb, 0xbb, 0x33, 0x68, 0x65, 0x96, 0xf0, 0x53, 0x1e, 0x7f, 0x0b,
	0x4d, 0x33, 0x93, 0xa2, 0x81, 0xcd, 0x82, 0xf6, 0xba, 0x61, 0xf9, 0x36, 0x7c, 0xcb, 0xcc, 0x16,
	0x52, 0x93, 0xa8, 0x07, 0xbb, 0x37, 0x84, 0x8d, 0xfe, 0xf3, 0x95, 0xcb, 0x56, 0xca, 0x27, 0x5a,
	0xc9, 0xad, 0x43, 0xed, 0x82, 0xdd, 0x86, 0xc6, 0xd6, 0xfd, 0x3b, 0x0f, 0xf5, 0x4b, 0x7a, 0x37,
	0x16, 0x8c, 0xb2, 0x3b, 0x29, 0x90, 0xf9, 0x19, 0x87, 0xdc, 0x82, 0xa9, 0xb3, 0xe4, 0x4d, 0xc3,
	0xc8, 0xd6, 0x9a, 0x3a, 0xa3, 0x7d, 0x80, 0x80, 0xb2, 0x41, 0xca, 0xd7, 0x6a, 0x40, 0x59, 0x5b,
	0x17, 0xa2, 0x14, 0xe3, 0xb9, 0x15, 0x17, 0x8d, 0x18, 0xcf, 0x8d, 0xf8, 0x25, 0x34, 0xe2, 0x14,
	0x4e, 0x67, 0x43, 0x99, 0x45, 0x5d, 0x7e, 0x1b, 0x96, 0x7d, 0xad, 0xb8, 0xea, 0xe3, 0x26, 0x14,
	0x73, 0xa7, 0x64, 0x3e, 0x4e, 0x12, 0xe8, 0x7b, 0xd8, 0x66, 0xb3, 0x60, 0x30, 0xd5, 0x39, 0x1a,
	0xf8, 0x63, 0xcc, 0x18, 0x99, 0x70, 0xa7, 0x7c, 0x90, 0x3b, 0xac, 0x7b, 0x88, 0xcd, 0x02, 0x93,
	0xbe, 0xae, 0x91, 0xa0, 0x63, 0xd8, 0x92, 0x16, 0x32, 0x72, 0x0f, 0x64, 0x69, 0x50, 0x51, 0x06,
	0x9b, 0x6c, 0x16, 0xb4, 0x95, 0x24, 0xd6, 0xdf, 0x83, 0xaa, 0xbe, 0x81, 0x44, 0xdc, 0xa9, 0x2a,
	0xad, 0x8a, 0x82, 0x25, 0x11, 0x97, 0x05, 0x38, 0x94, 0x85, 0x32, 0x18, 0x13, 0x19, 0x3b, 0x07,
	0x94, 0xbc, 0xa6, 0x78, 0xe7, 0x8a, 0x25, 0xbf, 0xdf, 0xa8, 0x60, 0x3e, 0x76, 0x6a, 0xfa, 0xfb,
	0xb5, 0x02, 0xe6, 0x63, 0x77, 0x01, 0xeb, 0x3a, 0x0d, 0xa6, 0x20, 0xf7, 0xa0, 0xc0, 0x4c, 0x06,
	0x37, 0x4e, 0xaa, 0xba, 0x16, 0xaf, 0x88, 0xf0, 0x24, 0x57, 0x35, 0x28, 0x0d, 0x96, 0x63, 0x8b,
	0x06, 0x04, 0xfd, 0x08, 0xf5, 0x89, 0xbc, 0x48, 0x7e, 0x3e, 0x65, 0xb7, 0xa1, 0xca, 0x40, 0xed,
	0x64, 0x4b, 0x9b, 0xa6, 0x52, 0xea, 0xad, 0x5b, 0x4d, 0x49, 0xb9, 0xbf, 0xdb, 0xa7, 0xca, 0x74,
	0xe4, 0xd3, 0x65, 0x94, 0x18, 0x28, 0xf9, 0xf4, 0x40, 0x59, 0x55, 0xa8, 0x67, 0x80, 0x64, 0xa1,
	0xc6, 0xcf, 0xf5, 0x27, 0xd0, 0xa9, 0xf6, 0xc2, 0xa2, 0x1b, 0xd2, 0x3d, 0x85, 0xdd, 0xc7, 0x23,
	0xc1, 0x84, 0xea, 0x00, 0x6a, 0x94, 0xc7, 0x6c, 0x65, 0x57, 0xf1, 0x92, 0xac, 0xa3, 0xd7, 0xb0,
	0xd6, 0x56, 0xf0, 0x65, 0x28, 0x74, 0xfa, 0xdd, 0xe6, 0x33, 0x75, 0xe8, 0x9e, 0x37, 0x73, 0xf2,
	0xd0, 0xeb, 0x9f, 0x37, 0xf3, 0xf2, 0x70, 0xd9, 0xef, 0x36, 0x0b, 0xa8, 0x02, 0xc5, 0xb3, 0xf6,
	0xcd, 0x79, 0xb3, 0x78, 0xd4, 0x83, 0xd2, 0x7b, 0x1c, 0xdd, 0x13, 0x81, 0x00, 0x4a, 0x9d, 0x7e,
	0x57, 0x2a, 0x3e, 0x33, 0xe7, 0x4e, 0x5f, 0x5a, 0xeb, 0xb3, 0xb4, 0xcb, 0xa3, 0x1a, 0x94, 0x3b,
	0xfd, 0xae, 0x32, 0x2d, 0x48, 0x41, 0xaf, 0x7f, 0x2e, 0x05, 0xc5, 0xa3, 0xef, 0xa0, 0x70, 0xa5,
	0x31, 0x6e, 0x68, 0xc0, 0x88, 0x68, 0x3e, 0x93, 0xba, 0x7d, 0xc2, 0x85, 0x24, 0x72, 0x92, 0x78,
	0x8f, 0x29, 0x93, 0x44, 0xfe, 0xe4, 0xaf, 0x12, 0x54, 0xbb, 0x21, 0x63, 0xc4, 0x17, 0x61, 0x84,
	0x4e, 0xa1, 0x9e, 0xda, 0x22, 0x50, 0x4b, 0xa7, 0x33, 0x6b, 0xb5, 0x68, 0x99, 0xa7, 0xc8, 0xaa,
	0xbe, 0x81, 0x8d, 0xf4, 0xe6, 0x80, 0xf6, 0x8c, 0x42, 0xd6, 0x3e, 0x91, 0x61, 0x9d, 0x5e, 0x17,
	0xac, 0x75, 0xe6, 0x12, 0x61, 0xad, 0xad, 0xee, 0x07, 0xd8, 0xca, 0x98, 0xb6, 0xe8, 0x20, 0x05,
	0x91, 0xb1, 0x3e, 0xb4, 0x5e, 0x3c, 0xa1, 0x61, 0xd2, 0xfd, 0x01, 0xb6, 0x32, 0xc6, 0xad, 0xc5,
	0x5e, 0x3d, 0x89, 0x2d, 0xf6, 0x53, 0xeb, 0xc6, 0x19, 0x34, 0x1e, 0xcd, 0x54, 0xf4, 0x5c, 0x5b,
	0x65, 0x8f, 0xda, 0x96, 0x69, 0xaf, 0xd4, 0xd3, 0x88, 0x5e, 0x41, 0x51, 0x4d, 0xce, 0x4d, 0x2d,
	0x4c, 0x8c, 0xd7, 0x16, 0x4a, 0xb2, 0xe2, 0xb7, 0xa7, 0x9e, 0xea, 0xbf, 0x74, 0x92, 0xd3, 0x4d,
	0x69, 0x03, 0x6d, 0x55, 0xdf, 0x40, 0x2d, 0xd1, 0x5b, 0xc8, 0x59, 0x3a, 0x9b, 0x6e, 0xb7, 0x6c,
	0x47, 0xdf, 0xc1, 0x46, 0xba, 0xa7, 0x6c, 0x92, 0x33, 0x1f, 0xdf, 0xd6, 0xf3, 0x6c, 0xa1, 0x01,
	0xfb, 0x09, 0x2a, 0x76, 0xb5, 0x46, 0x3b, 0xe6, 0xb6, 0xf4, 0xaa, 0xdd, 0x72, 0x52, 0xec, 0x64,
	0xe0, 0xaf, 0xa0, 0xf1, 0x68, 0x9d, 0xb7, 0x81, 0xcf, 0xfe, 0x1f, 0x68, 0xed, 0xaf, 0x90, 0x6a,
	0xbc, 0x61, 0x49, 0xfd, 0x55, 0xfc, 0xf0, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x9f, 0xcc,
	0x79, 0x62, 0x0c, 0x00, 0x00,
}
